// This file was generated by lezer-generator. You probably shouldn't edit it.
import {Parser} from "lezer"
import {NodeProp} from "lezer"
const spec_identifier = {__proto__:null,Abs:40, Gross:42, Net:44}
export const parser = Parser.deserialize({
  version: 13,
  states: "#YOVQPOOOOQO'#C_'#C_OeQPO'#CnOVQPO'#CcQyQPOOOVQPO'#CjOOQO'#Cn'#CnO!UQPO,58zOOQO,58},58}OVQPO,59POVQPO,59PO!aQPO,59UOOQO1G.f1G.fOOQO'#Cb'#CbO!oQPO1G.kO#QQPO1G.kOOQO1G.p1G.p",
  stateData: "#c~OaOS~OQUOWRO]TOcPO~OTVOWbXYbXZbX_bX[bX~OWXOYYOZYO~Od]Oe]Of]O~OWXOYYOZYO[`O~OYYOZYOWXi_Xi[Xi~OZYOWXiYXi_Xi[Xi~O",
  goto: "!UcPPPdkPrkPkPPPPkPPPuZQORTXYZUORTXYR[VQSOQWRQZTQ^XR_Y",
  nodeNames: "âš  Program Number VariableName PropertyExpression . Property UnaryExpression ArithOp BinaryExpression ArithOp ArithOp ) ( ParenthesisedExpression",
  maxTerm: 22,
  nodeProps: [
    [NodeProp.openedBy, 12,"("],
    [NodeProp.closedBy, 13,")"]
  ],
  skippedNodes: [0],
  repeatNodeCount: 0,
  tokenData: "#u~RfX^!gpq!gxy!lyz!qz{!v{|!{}!O!{!O!P#Q!P!Q!v!Q![#V!c!}#_#Q#R#p#R#S#_#T#o#_#y#z!g$f$g!g#BY#BZ!g$IS$I_!g$I|$JO!g$JT$JU!g$KV$KW!g&FU&FV!g~!lOa~~!qO]~~!vO[~~!{OY~~#QOW~~#VOT~~#[PQ~!Q![#V~#dSc~!Q![#_!c!}#_#R#S#_#T#o#_~#uOZ~",
  tokenizers: [0],
  topRules: {"Program":[0,1]},
  specialized: [{term: 19, get: value => spec_identifier[value] || -1}],
  tokenPrec: 0
})
